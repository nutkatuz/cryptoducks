{"version":3,"sources":["components/Header.jsx","contexts/CurrentUserContext.jsx","components/Card.jsx","components/Main.jsx","components/Footer.jsx","components/PopupWithForm.jsx","components/ImagePopup.jsx","utils/api.jsx","components/EditProfilePopup.jsx","components/EditAvatarPopup.jsx","components/AddPlacePopup.jsx","components/App.jsx","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardDelete","onCardLike","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","name","link","onMouseUp","type","aria-label","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","style","backgroundImage","avatar","about","map","key","Footer","PopupWithForm","title","isOpen","onClose","onSubmit","children","action","noValidate","onClick","ImagePopup","isImgPopupOpen","api","baseUrl","headers","this","fetch","then","res","ok","json","Promise","reject","status","method","body","JSON","stringify","authorization","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","handleChange","e","target","value","useEffect","preventDefault","placeholder","autoComplete","required","minLength","maxLength","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","defaultValue","AddPlacePopup","setLink","inputMode","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserData","getInitialItems","userInfo","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","deleteItem","filter","item","patchUserData","patchUserAvatar","postItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.4c568659.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n      <header className='header'>\n        <img className='header__logo hover-style'\n          src={logo} alt='логотип Mesto Russia' />\n      </header>\n  );\n}\n\nexport default Header;","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction Card({ \n  card, \n  onCardClick, \n  onCardDelete, \n  onCardLike \n}) { \n  const currentUser = useContext(CurrentUserContext);\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (`card__recycle-bin hover-style ${isOwn ? '' : 'card__recycle-bin_hidden'}`);\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = `card__like hover-style ${isLiked && 'card__like_active'}`;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleDeleteClick () {\n    onCardDelete(card);\n  }\n  \n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  return (\n    <li className='card' >\n      <img className='card__image' alt={`${card.name}`} src={`${card.link}`} onMouseUp={handleClick}/>\n      <button className={cardDeleteButtonClassName} onMouseUp={handleDeleteClick}\n        type='button'\n        aria-label='Удалить' />\n      <h3 className='card__title'>{card.name}</h3>\n      <button className={cardLikeButtonClassName} onMouseUp={handleLikeClick}\n        type='button'\n        aria-label='Лайкнуть' />\n      <p className='card__like-count'>{card.likes.length}</p>\n    </li>\n  );\n}\n\nexport default Card;","import React, { useContext } from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({ \n  onEditAvatar, \n  onEditProfile, \n  onAddPlace, \n  onCardClick, \n  cards,\n  onCardLike,\n  onCardDelete,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className='content'>\n      <section className='profile'>\n        <button\n          onMouseUp={() => onEditAvatar()}\n          className='profile__photobtn'\n          type='button'\n          aria-label='Обновить фото профиля'\n          style={{ backgroundImage: `url(${currentUser.avatar})` }}\n        >\n          <div className='profile__photobtn-overlay' />\n        </button>\n        <h1 className='profile__name'>{currentUser.name}</h1>\n        <p className='profile__job'>{currentUser.about}</p>\n        <button\n          onMouseUp={() => onEditProfile()}\n          className='profile__edit-button hover-style'\n          type='button'\n          aria-label='Редактировать данные профиля'>\n        </button>\n        <button\n          onMouseUp={() => onAddPlace()}\n          className='profile__add-button hover-style'\n          type='button'\n          aria-label='Добавить карточку'>\n        </button>\n      </section>\n      <section className='gallery-cards'>\n        <ul className='gallery'>\n          {cards.map(card => (<Card key={card._id}\n            card={card}\n            onCardClick={onCardClick}\n            onCardLike={onCardLike}\n            onCardDelete={onCardDelete}\n          />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className='footer'>\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm({ name, title, isOpen, onClose, onSubmit, children }) {\n  \n    return (\n      <section className={`popup ${isOpen?'popup_is-opened':''} popup_${name}`}>\n        <form className='popup__form' \n          action='#' \n          noValidate\n          onSubmit={onSubmit}>\n          <button \n            className='popup__close hover-style' \n            type='button'\n            aria-label='Закрыть окно без сохранения' \n            onClick={onClose} />\n          <fieldset className='popup__content'>\n            <h3 className='popup__title'>{`${title}`}</h3>\n            {children}\n          </fieldset>\n        </form>\n      </section>\n    )\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) { //selectedCard, onClose\n  function handleClick() {\n    onClose(card);\n  }\n  return (\n    <section className={`popup popup_zoom ${card.isImgPopupOpen ? 'popup_is-opened' : ''}`}>\n      <figure className='zoom'>\n        <button className='popup__close popup__close_figure hover-style' type='button'\n          aria-label='Закрыть картинку' onClick={handleClick} />\n        <img className='zoom__image' src={`${card.link}`} alt={`${card.name}`} />\n        <figcaption className='zoom__caption'>{`${card.name}`}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;","class Api {\r\n  constructor({\r\n    baseUrl,\r\n    headers\r\n  }) {\r\n    this.baseUrl = baseUrl\r\n    this.headers = headers\r\n  }\r\n\r\n  //Написать общие функции для Api.js (запрос, обработка ошибок, и.т.д)_common() {  }\r\n\r\n  getInitialItems() {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards`, {\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()//Написать общие функции для Api.js (запрос, обработка ошибок, и.т.д)\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  postItem({name, link}) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards`, {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name, link\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  deleteItem(_id) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/${_id}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  patchUserAvatar(avatar) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/users/me/avatar`, {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify(avatar)\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  getUserData() {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/users/me`, {\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  patchUserData({name, about}) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/users/me`, {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name,\r\n          about\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  putLike(_id) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/likes/${_id}`, {\r\n        method: 'PUT',\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  deleteLike(_id) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/likes/${_id}`, {\r\n        method: 'DELETE',\r\n        headers: this.headers\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n\r\n  changeLikeCardStatus(_id, isLiked) {\r\n    return fetch(`${this.baseUrl}/v1/cohort-14/cards/likes/${_id}`, {\r\n        method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          _id\r\n        })\r\n      })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json()\r\n        }\r\n        return Promise.reject(`Ошибка при обращении к серверу: ${res.status}`)\r\n      })\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co',\r\n  headers: {\r\n      authorization: 'd53467ef-75db-4cf1-9a1c-2d2c544f18c8',\r\n      'Content-Type': 'application/json'\r\n  }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class Api {\r\n//   constructor({\r\n//     baseUrl,\r\n//     headers\r\n//   }) {\r\n//     this.baseUrl = baseUrl\r\n//     this.headers = headers\r\n//   }\r\n\r\n//   getInitialItems() {\r\n//     return fetch(`${this.baseUrl}/cards`, {\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   getUserData() {\r\n//     // return fetch(`${this.baseUrl}/users/me`, {\r\n//     return fetch(`${this.baseUrl}/users/5f93590a3ea6942bc8a58414`, {\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n  \r\n//   postItem({name, link}) {\r\n//     return fetch(`${this.baseUrl}/cards`, {\r\n//         method: 'POST',\r\n//         headers: this.headers,\r\n//         body: JSON.stringify({\r\n//           name, link\r\n//         })\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   deleteItem(_id) {\r\n//     return fetch(`${this.baseUrl}/cards/${_id}`, {\r\n//         method: 'DELETE',\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   patchUserAvatar(avatar) {\r\n//     return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n//         method: 'PATCH',\r\n//         headers: this.headers,\r\n//         body: JSON.stringify(avatar)\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   patchUserData({name, about}) {\r\n//     return fetch(`${this.baseUrl}/users/me`, {\r\n//         method: 'PATCH',\r\n//         headers: this.headers,\r\n//         body: JSON.stringify({\r\n//           name,\r\n//           about\r\n//         })\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   putLike(_id) {\r\n//     return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\r\n//         method: 'PUT',\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   deleteLike(_id) {\r\n//     return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\r\n//         method: 'DELETE',\r\n//         headers: this.headers\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n\r\n//   changeLikeCardStatus(_id, isLiked) {\r\n//     return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\r\n//         method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n//         headers: this.headers,\r\n//         body: JSON.stringify({\r\n//           _id\r\n//         })\r\n//       })\r\n//       .then(res => {\r\n//         if (res.ok) {\r\n//           return res.json()\r\n//         }\r\n//         return Promise.reject(`Произошла ошибка при обращении к серверу:: ${res.status}`)\r\n//       })\r\n//   }\r\n// }\r\n\r\n// export const api = new Api({\r\n//   baseUrl: 'http://localhost:3000',\r\n//   headers: {\r\n//       authorization: 'd53467ef-75db-4cf1-9a1c-2d2c544f18c8',\r\n//       'Content-Type': 'application/json'\r\n//   }\r\n// })\r\n","import React, { useState, useEffect } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser} ) {\n  const currentUser = React.useContext(CurrentUserContext);\n  \n  // добавьте стейт-переменные name и description и привяжите их к полям ввода, сделав их управляемыми.\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');  \n\n  useEffect(() => {  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleChange(e) {\n    e.target.name === 'firstInp'\n      ? setName(e.target.value)  //   setValue(e.target.value);\n      : setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {    \n    e.preventDefault();      // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name='profile-edit'\n      title='Редактировать профиль'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <label className='popup__label'>\n        <input className='popup__input popup__input_name'\n          type='text'\n          name='firstInp'\n          value={name || ''}\n          placeholder='Имя'\n          autoComplete='name'\n          required\n          minLength='2'\n          maxLength='40'\n          onChange={handleChange}\n        />\n        <span className='popup__error' />\n      </label>\n      <label className='popup__label'>\n        <input\n          className='popup__input popup__input_about'\n          type='text'\n          name='secondInp'\n          value={description || ''}\n          autoComplete='off'\n          placeholder='О себе'\n          required\n          minLength='2'\n          maxLength='200'\n          onChange={handleChange}\n        />\n        <span className='popup__error' />\n      </label>\n      <button className='popup__button'\n        type='submit'\n        aria-label='Сохранить изменения'>Сохранить</button>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const inputRef = React.useRef('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value /* Значение инпута, полученное с помощью рефа */\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name='update-avatar'\n      title='Обновить аватар'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <label className='popup__label'>\n        <input\n          ref={inputRef}\n          className='popup__input popup__input_update-avatar'\n          name='thirdInp'\n          defaultValue=''\n          placeholder='Ссылка на фото'\n          type='url' />\n        <span className='popup__error' />\n      </label>\n      <button className='popup__button' \n        type='submit'\n        aria-label='Обновить фото пользователя'\n        value='Сохранить' />\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n  // Стейт, в котором содержится значение инпута\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n\n  function handleChange(e) {  // Обработчик изменения инпута обновляет стейт\n    e.target.name === 'name'\n      ? setName(e.target.value)\n      : setLink(e.target.value) /* управляемые компоненты */\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({name, link});\n  }\n\n  return (\n    <PopupWithForm\n      name='confirm'\n      title='Новое место'\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <label className='popup__label'>\n        <input className='popup__input popup__input_place-name'\n          type='text'\n          name='name'\n          value={name || ''} // Значение элемента «привязывается» к значению стейта\n          onChange={handleChange}\n          autoComplete='off'\n          placeholder='Название'\n          minLength='1'\n          maxLength='30'\n          required />\n        <span className='popup__error' />\n      </label>\n      <label className='popup__label'>\n        <input className='popup__input popup__input_image_url'\n          type='url'\n          inputMode='url'\n          name='link'\n          value={link || ''}\n          onChange={handleChange}\n          placeholder='Ссылка на картинку'\n          required />\n        <span className='popup__error' />\n      </label>\n      <button className='popup__button'\n        type='submit'\n        aria-label='Сохранить новую карточку'>Создать\n      </button>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { api } from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n  useEffect(() => {\n    Promise.all([api.getUserData(), api.getInitialItems()])\n      .then(([userInfo, cards]) => {\n        setCurrentUser(userInfo);\n        setCards(cards)\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      });\n  }, [])\n\n  function handleCardClick(card) {\n    setSelectedCard({ ...card, isImgPopupOpen: true });\n  }\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n  function closeAllPopups(card) {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({ ...card, isImgPopupOpen: false });\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .patchUserData({ name, about })\n      .then((res) => {\n        setCurrentUser(res)\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      });\n  }\n\n  function handleUpdateAvatar(avatar) {//{avatar: 'https://pictures.jpg'}\n    api\n      .patchUserAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      });\n  }\n\n  //Cards\n\n  function handleAddPlaceSubmit({name, link}) {\n    api\n      .postItem({name, link})\n      .then((newCard) => {\n        setCards([...cards, newCard]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteItem(card._id)\n      .then(() => {\n        setCards(cards.filter((item) => item !== card));\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className='page'>\n        <div className='page__container'>\n          <div className='page__header-and-main-wrapper'>\n            <Header />\n            <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n          </div>\n          <Footer />\n        </div>\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // 'Content is cached for offline use.' message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.661315c6.svg\";"],"sourceRoot":""}